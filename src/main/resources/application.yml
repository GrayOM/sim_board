# Spring과 MySQL 연결 설정
spring:
  datasource:
    url: jdbc:mysql://db:3306/board_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC # docker-compose.yml의 서비스 이름과 일치해야 함 (컨테이너 간 통신용)
    username: root # MySQL 사용자 이름
    password: root # MySQL 비밀번호
    driver-class-name: com.mysql.cj.jdbc.Driver  # MySQL용 드라이버 클래스

  jpa:  # Java API -> DB CRUD 작업을 간편하게 해주는 API
    hibernate:
      ddl-auto: update # 개발 상태에서는 update (운영 시에는 none 또는 validate 권장)
    show-sql: true # SQL 쿼리 로그 출력 여부
    properties:
      hibernate:
        format_sql: true # SQL 로그 예쁘게 출력
    database-platform: org.hibernate.dialect.MySQL8Dialect # MySQL을 사용한다고 명시해야 오류 방지

  servlet:
    multipart:
      max-file-size: 10MB # 파일 업로드 최대 크기 설정
      max-request-size: 10MB # 요청 전체 크기 제한

  # Thymeleaf 설정
  thymeleaf:
    cache: false  # 개발 환경에서는 false로 설정하여 템플릿 자동 반영, 운영 환경에서는 true 권장

# 파일 업로드 경로 설정
file:
  upload-dir: /app/uploads  # Docker 컨테이너 내 업로드 경로

# 로그 레벨 설정
logging:
  level:
    org.springframework.web: INFO # Spring Web 관련 로그
    org.hibernate: INFO # Hibernate 관련 로그
    com.example.board: DEBUG # 우리 애플리케이션의 로그는 DEBUG로 상세하게 출력
